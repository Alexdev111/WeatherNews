{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Downloads\\\\WeatherNews\\\\my-app\\\\src\\\\components\\\\Forecast.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { ReactComponent as MySVG1 } from '../images/icons/icon-1.svg';\nimport UmbrellaIcon from '../images/humidity-icon.png';\nimport Header from \"./Header\";\n// import WindIcon from '../images/icon-wind.png';\nimport CompassIcon from '../images/compass-icon.png';\nimport icon3 from '../images/icons/icon-3.svg';\nimport icon4 from '../images/icons/icon-5.svg';\nimport icon5 from '../images/icons/icon-7.svg';\nimport icon6 from '../images/icons/icon-12.svg';\nimport icon7 from '../images/icons/icon-13.svg';\nimport icon8 from '../images/icons/icon-14.svg';\nimport WIndIcon from '../images/wind-icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst today_type_day = new Date();\nconst currentDayIndex = today_type_day.getDay();\nconst week = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thrusday', 'Friday', 'Saturday'];\nconst today = new Date();\nconst hour = today.getHours().toString().padStart(2, '0');\nconst min = today.getMinutes().toString().padStart(2, '0');\nconst day = today.getDate();\nconst year = today.getFullYear();\nconst monthIndex = today.getMonth();\nconst formattedDate1 = day + \" \" + monthNames[monthIndex];\nconst formattedDate2 = day + \" \" + monthNames[monthIndex] + \" \" + hour + \":\" + min;\nconst formattedDate3 = year;\nconst latitude = '47.06270550000001';\nconst longitude = '28.8048974';\n// timezone timezone=Europe%2FChisinau\nlet API_URL = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current=temperature_2m,is_day,rain,relative_humidity_2m,wind_speed_10m,wind_direction_10m&hourly=precipitation,temperature_2m&daily=apparent_temperature_max,apparent_temperature_min&timezone=auto`;\n// let urlBeta = `https://api.open-meteo.com/v1/forecast?latitude=47.0042&longitude=28.8574&current=temperature_2m,wind_direction_10m,wind_speed_10m,relative_humidity_2m&hourly=wind_speed_10m`;\n\n// const WeatherForecast = () => {\n//     const [forecastData, setForecastData] = useState(null);\n//     const API_URL = 'https://api.open-meteo.com/v1/forecast';\n//     const LATITUDE = '47.25';\n//     const LONGITUDE = '28.5833';\n//     const TIMEZONE = 'Europe/Chisinau';\n\n//     useEffect(() => {\n//         const fetchForecast = async () => {\n//             try {\n//                 const response = await fetch(\n//                     `${API_URL}?latitude=${LATITUDE}&longitude=${LONGITUDE}&current=temperature_2m,is_day,rain,wind_speed_10m,wind_direction_10m&hourly=&timezone=${TIMEZONE}`\n//                 );\n//                 if (!response.ok) {\n//                     throw new Error('Failed to fetch forecast data');\n//                 }\n//                 const data = await response.json();\n//                 // Filter data for future days\n//                 const futureDaysData = data.hourly.filter(hour => {\n//                     const hourTimestamp = new Date(hour.time).getTime();\n//                     const currentTimestamp = Date.now();\n//                     const oneDayInMilliseconds = 24 * 60 * 60 * 1000;\n//                     return hourTimestamp > currentTimestamp && (hourTimestamp - currentTimestamp) < (3 * oneDayInMilliseconds); // Adjust number of days as needed\n//                 });\n//                 setForecastData(futureDaysData);\n//             } catch (error) {\n//                 console.error('Error fetching forecast data:', error);\n//             }\n//         };\n\n//         fetchForecast();\n//     }, []);\n//     console.log(WeatherForecast)\n\nfunction Forecast() {\n  _s();\n  useEffect(() => {\n    fetch(API_URL).then(response => response.json()).then(info => {\n      renderWeather(info.current);\n      renderWeatherDaily(info.daily);\n      console.log(info);\n      console.log(info.hourly.time[24]);\n    }).catch(error => {\n      console.error(\"Error fetching weather data:\", error);\n    });\n  }, []);\n  function renderWeather(data) {\n    let div = `\n                    Latitude: ${latitude} Longitude: ${longitude}\n                    Temperature: ${data.temperature_2m}\n                    Wind Speed: ${data.wind_speed_10m}\n                    now: ${data.is_day === 0 ? 'night' : 'day'}\n                    Humidity: ${data.relative_humidity_2m}\n                    Rain ${data.rain}%\n                    `;\n    console.log(div);\n    const currTemp = Math.round(data.temperature_2m);\n    const currTempElement = document.getElementById('grade');\n    currTempElement.textContent = currTemp;\n    const windSpeed = Math.round(data.wind_speed_10m);\n    const windSpeedElement = document.getElementById('wind-speed');\n    windSpeedElement.textContent = windSpeed + 'km/h';\n    const humidity = data.relative_humidity_2m;\n    const humidityElement = document.getElementById('humidity-procent');\n    humidityElement.textContent = humidity + '%';\n    function getWindDirections(degrees) {\n      const directions = ['North', 'North-East', 'East', 'South-East', 'South', 'South-West', 'West', 'North-West'];\n      const index = Math.round(degrees % 360 / 45);\n      return directions[index % 8];\n    }\n    const windDirectElement = document.getElementById('compass-direction');\n    windDirectElement.textContent = getWindDirections(data.wind_direction_10m);\n    //  ------------------------------SEARCH FETCH-----------------------------------------\n    function getCoordinates() {\n      const apiKey = 'AIzaSyBOBMYfXOoZtjq5x96alyK_XGWAs8HHlRU';\n      let cityName = document.getElementById('location-search-large').value;\n      let urlC = `https://maps.googleapis.com/maps/api/geocode/json?address=${cityName}&key=${apiKey}`;\n      fetch(urlC).then(response => response.json()).then(data => {\n        if (data.results.length > 0) {\n          const location = data.results[0].geometry.location;\n          const afterLatitude = location.lat;\n          const afterLongitude = location.lng;\n          console.log(`${cityName} ==> Latitude: ${afterLatitude}, Longitude: ${afterLongitude}`);\n          let cityElement = document.querySelector('.city');\n          if (cityElement) {\n            cityElement.textContent = cityName;\n          } else {\n            console.error('City element not found.');\n          }\n          const urlTest = `https://api.open-meteo.com/v1/forecast/${cityName}?latitude=${afterLatitude}&longitude=${afterLongitude}&current=temperature_2m,is_day,rain,relative_humidity_2m,wind_speed_10m,wind_direction_10m&hourly=&timezone=Europe%2FChisinau`;\n          return fetch(urlTest);\n        } else {\n          console.error('City not found.');\n        }\n      }).then(secondaryUrl => {\n        if (!secondaryUrl.ok) {\n          throw new Error('Secondary network response was not ok');\n        }\n        return secondaryUrl.jsom();\n      }).then(secondaryData => {\n        console.log('Secondary data: ', secondaryData);\n      }).catch(error => {\n        console.error('Error fetching coordinates:', error);\n      });\n    }\n    // let citycity = document.getElementById('location-search-large').value\n    document.getElementById('submit-button').addEventListener('click', getCoordinates);\n    // document.getElementById('submit-button').addEventListener('click', citycity = '' )\n  }\n  function renderWeatherDaily(data) {\n    let div = `\n                    Temperature max: ${data.apparent_temperature_max}\n                    Temperature min: ${data.apparent_temperature_min}\n                    Wind Speed: ${data.wind_speed_10m}\n                    now: ${data.is_day === 0 ? 'night' : 'day'}\n                    Humidity: ${data.relative_humidity_2m}\n                    Rain ${data.rain}%\n                    `;\n    console.log(div);\n\n    // const currentDate = new Date();\n    // const temperatureForecasts = []\n\n    // for(let i=0;i<=6;i++) {\n    //     const nextDayDate = new Date(currentDate.getTime() + (i * 24 * 60 * 60 * 1000));\n    //     const nextDayDateString = nextDayDate.toISOString().split('T')[0];\n    //     const nextDayForecastIndex = data.time.indexOf(nextDayDateString + 'T00:00');\n    //     const temperatureForecastNextDay = data.temperature_2m[nextDayForecastIndex];\n    //     temperatureForecasts.push(temperatureForecastNextDay);\n    // }\n    // console.log(\"Temperature forecasts for the next 6 days:\", temperatureForecasts);\n    for (let i = 0; i < 7; i++) {\n      const max_grade = Math.round(data.apparent_temperature_max[1]);\n      const max_gradeElement = document.getElementById('max-grade');\n      max_gradeElement.textContent = max_grade + 'Â°C';\n      console.log(data.apparent_temperature_max[i]);\n    }\n\n    // const url1 = 'https://dummyjson.com/users';\n\n    // function fetchurl() {\n    //     fetch(url1)\n    //         .then((resp) => {\n    //             if (!resp.ok) {\n    //                 throw new Error('Network response was not ok');\n    //             }\n    //             return resp.json();\n    //         })\n    //         .then(json => {\n    //             const users = json.users;\n    //             for (let i = 0; i < 5 && i < users.length; i++) {\n    //                 console.log(users[i]);\n    //             }\n    //             console.log(json);\n    //         })\n    //         .catch(err => console.error(err.message));\n    // }\n\n    // fetchurl();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero\",\n        children: /*#__PURE__*/_jsxDEV(\"container\", {\n          className: \"search-container-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"form1\",\n            className: \"form-large\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              maxLength: 15,\n              id: \"location-search-large\",\n              placeholder: \"Find your location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"submit-button\",\n              children: \"Find\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-table\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"today\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"today-date\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"today\",\n                  children: week[currentDayIndex]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"date\",\n                  children: formattedDate1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"forecast-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"city\",\n                  children: \"Moldova, Chi\\u0219in\\u0103u\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"number\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"grade\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"sup\", {\n                    id: \"sup\",\n                    children: \"o\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 29\n                  }, this), \"C\", /*#__PURE__*/_jsxDEV(MySVG1, {\n                    id: \"icon1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"day-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"umbrella-icon\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: UmbrellaIcon,\n                      alt: \"umbrella-icon\",\n                      id: \"umbrella\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      id: \"humidity-procent\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"wind-icon\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: WIndIcon,\n                      alt: \"wind-icon\",\n                      id: \"wind\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      id: \"wind-speed\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"compass-icon\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: CompassIcon,\n                      alt: \"compass-icon\",\n                      id: \"compass\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      id: \"compass-direction\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast\",\n              style: {\n                backgroundColor: '#262936'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day\",\n                style: {\n                  backgroundColor: '#222530'\n                },\n                children: week[(currentDayIndex + 1) % 7]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"forecast-img\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: \"day-icon\",\n                    src: icon3,\n                    style: {\n                      width: '48px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"max-grade\",\n                  children: Math.round(data.apparent_temperature_max[1])\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"min-grade\",\n                  children: \"25\\xB0C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast\",\n              style: {\n                backgroundColor: '#323544'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day\",\n                style: {\n                  backgroundColor: '#2d303d'\n                },\n                children: week[(currentDayIndex + 2) % 7]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"forecast-img\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: \"day-icon\",\n                    src: icon4,\n                    style: {\n                      width: '48px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"max-grade\",\n                  children: \"25\\xB0C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"min-grade\",\n                  children: \"25\\xB0C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast\",\n              style: {\n                backgroundColor: '#262936'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day\",\n                style: {\n                  backgroundColor: '#222530'\n                },\n                children: week[(currentDayIndex + 3) % 7]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"forecast-img\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: \"day-icon\",\n                    src: icon5,\n                    style: {\n                      width: '48px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"max-grade\",\n                  children: \"25\\xB0C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"min-grade\",\n                  children: \"25\\xB0C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast\",\n              style: {\n                backgroundColor: '#323544'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day\",\n                style: {\n                  backgroundColor: '#2d303d'\n                },\n                children: week[(currentDayIndex + 4) % 7]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"forecast-img\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: \"day-icon\",\n                    src: icon6,\n                    style: {\n                      width: '48px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"max-grade\",\n                  children: \"25\\xB0C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"min-grade\",\n                  children: \"25\\xB0C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast\",\n              style: {\n                backgroundColor: '#262936'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day\",\n                style: {\n                  backgroundColor: '#222530'\n                },\n                children: week[(currentDayIndex + 5) % 7]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"forecast-img\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: \"day-icon\",\n                    src: icon7,\n                    style: {\n                      width: '48px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"max-grade\",\n                  children: \"25\\xB0C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"min-grade\",\n                  children: \"25\\xB0C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast\",\n              style: {\n                backgroundColor: '#323544'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day\",\n                style: {\n                  backgroundColor: '#2d303d'\n                },\n                children: week[(currentDayIndex + 6) % 7]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"forecast-img\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: \"day-icon\",\n                    src: icon8,\n                    style: {\n                      width: '48px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"max-grade\",\n                  children: \"25\\xB0C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"min-grade\",\n                  children: \"25\\xB0C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(Forecast, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Forecast;\nexport default Forecast;\nexport { formattedDate1, formattedDate2, formattedDate3 };\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","useEffect","ReactComponent","MySVG1","UmbrellaIcon","Header","CompassIcon","icon3","icon4","icon5","icon6","icon7","icon8","WIndIcon","jsxDEV","_jsxDEV","monthNames","today_type_day","Date","currentDayIndex","getDay","week","today","hour","getHours","toString","padStart","min","getMinutes","day","getDate","year","getFullYear","monthIndex","getMonth","formattedDate1","formattedDate2","formattedDate3","latitude","longitude","API_URL","Forecast","_s","fetch","then","response","json","info","renderWeather","current","renderWeatherDaily","daily","console","log","hourly","time","catch","error","data","div","temperature_2m","wind_speed_10m","is_day","relative_humidity_2m","rain","currTemp","Math","round","currTempElement","document","getElementById","textContent","windSpeed","windSpeedElement","humidity","humidityElement","getWindDirections","degrees","directions","index","windDirectElement","wind_direction_10m","getCoordinates","apiKey","cityName","value","urlC","results","length","location","geometry","afterLatitude","lat","afterLongitude","lng","cityElement","querySelector","urlTest","secondaryUrl","ok","Error","jsom","secondaryData","addEventListener","apparent_temperature_max","apparent_temperature_min","i","max_grade","max_gradeElement","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","type","maxLength","placeholder","src","alt","style","backgroundColor","width","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Downloads/WeatherNews/my-app/src/components/Forecast.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { ReactComponent as MySVG1 } from '../images/icons/icon-1.svg';\r\nimport UmbrellaIcon from '../images/humidity-icon.png';\r\nimport Header from \"./Header\";\r\n// import WindIcon from '../images/icon-wind.png';\r\nimport CompassIcon from '../images/compass-icon.png';\r\nimport icon3 from '../images/icons/icon-3.svg';\r\nimport icon4 from '../images/icons/icon-5.svg';\r\nimport icon5 from '../images/icons/icon-7.svg';\r\nimport icon6 from '../images/icons/icon-12.svg';\r\nimport icon7 from '../images/icons/icon-13.svg';\r\nimport icon8 from '../images/icons/icon-14.svg';\r\nimport WIndIcon from '../images/wind-icon.png'\r\n\r\nconst monthNames = [\r\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    \r\nconst today_type_day = new Date()\r\nconst currentDayIndex = today_type_day.getDay()\r\nconst week = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thrusday', 'Friday', 'Saturday']\r\n\r\nconst today = new Date();\r\nconst hour = today.getHours().toString().padStart(2, '0');\r\nconst min = today.getMinutes().toString().padStart(2, '0'); \r\nconst day = today.getDate();\r\nconst year = today.getFullYear();\r\nconst monthIndex = today.getMonth();\r\nconst formattedDate1 = day + \" \" + monthNames[monthIndex];\r\nconst formattedDate2 = day + \" \" + monthNames[monthIndex] + \" \" + hour + \":\" + min;\r\nconst formattedDate3 = year;\r\n\r\nconst latitude = '47.06270550000001'\r\nconst longitude = '28.8048974'\r\n// timezone timezone=Europe%2FChisinau\r\nlet API_URL = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current=temperature_2m,is_day,rain,relative_humidity_2m,wind_speed_10m,wind_direction_10m&hourly=precipitation,temperature_2m&daily=apparent_temperature_max,apparent_temperature_min&timezone=auto`\r\n// let urlBeta = `https://api.open-meteo.com/v1/forecast?latitude=47.0042&longitude=28.8574&current=temperature_2m,wind_direction_10m,wind_speed_10m,relative_humidity_2m&hourly=wind_speed_10m`;\r\n\r\n\r\n// const WeatherForecast = () => {\r\n//     const [forecastData, setForecastData] = useState(null);\r\n//     const API_URL = 'https://api.open-meteo.com/v1/forecast';\r\n//     const LATITUDE = '47.25';\r\n//     const LONGITUDE = '28.5833';\r\n//     const TIMEZONE = 'Europe/Chisinau';\r\n\r\n//     useEffect(() => {\r\n//         const fetchForecast = async () => {\r\n//             try {\r\n//                 const response = await fetch(\r\n//                     `${API_URL}?latitude=${LATITUDE}&longitude=${LONGITUDE}&current=temperature_2m,is_day,rain,wind_speed_10m,wind_direction_10m&hourly=&timezone=${TIMEZONE}`\r\n//                 );\r\n//                 if (!response.ok) {\r\n//                     throw new Error('Failed to fetch forecast data');\r\n//                 }\r\n//                 const data = await response.json();\r\n//                 // Filter data for future days\r\n//                 const futureDaysData = data.hourly.filter(hour => {\r\n//                     const hourTimestamp = new Date(hour.time).getTime();\r\n//                     const currentTimestamp = Date.now();\r\n//                     const oneDayInMilliseconds = 24 * 60 * 60 * 1000;\r\n//                     return hourTimestamp > currentTimestamp && (hourTimestamp - currentTimestamp) < (3 * oneDayInMilliseconds); // Adjust number of days as needed\r\n//                 });\r\n//                 setForecastData(futureDaysData);\r\n//             } catch (error) {\r\n//                 console.error('Error fetching forecast data:', error);\r\n//             }\r\n//         };\r\n\r\n//         fetchForecast();\r\n//     }, []);\r\n//     console.log(WeatherForecast)\r\n\r\n        function Forecast() {\r\n            useEffect(() => {\r\n                fetch(API_URL)\r\n                    .then(response => response.json())\r\n                    .then(info => {\r\n                        renderWeather(info.current);\r\n                        renderWeatherDaily(info.daily)\r\n\r\n                        console.log(info);\r\n                        console.log(info.hourly.time[24])\r\n                    })\r\n                    .catch(error => {\r\n                        console.error(\"Error fetching weather data:\", error);\r\n                    });\r\n            }, []);\r\n            \r\n                function renderWeather(data) {\r\n                    let div = `\r\n                    Latitude: ${latitude} Longitude: ${longitude}\r\n                    Temperature: ${data.temperature_2m}\r\n                    Wind Speed: ${data.wind_speed_10m}\r\n                    now: ${data.is_day === 0 ? 'night' : 'day'}\r\n                    Humidity: ${data.relative_humidity_2m}\r\n                    Rain ${data.rain}%\r\n                    `\r\n                    console.log(div)\r\n                    const currTemp = Math.round(data.temperature_2m)\r\n                    const currTempElement = document.getElementById('grade')\r\n                    currTempElement.textContent = currTemp\r\n\r\n                    \r\n                    const windSpeed = Math.round(data.wind_speed_10m)\r\n                    const windSpeedElement = document.getElementById('wind-speed')\r\n                    windSpeedElement.textContent = windSpeed + 'km/h'\r\n\r\n                    const humidity = data.relative_humidity_2m\r\n                    const humidityElement = document.getElementById('humidity-procent')\r\n                    humidityElement.textContent = humidity + '%'\r\n                \r\n\r\n                function getWindDirections(degrees) {\r\n                    const directions = ['North', 'North-East', 'East', 'South-East', 'South', 'South-West', 'West', 'North-West']\r\n                    const index = Math.round((degrees % 360) / 45);\r\n                    return directions[index % 8];\r\n                }\r\n                const windDirectElement = document.getElementById('compass-direction')\r\n                windDirectElement.textContent = getWindDirections(data.wind_direction_10m)\r\n//  ------------------------------SEARCH FETCH-----------------------------------------\r\n        function getCoordinates() {\r\n            const apiKey = 'AIzaSyBOBMYfXOoZtjq5x96alyK_XGWAs8HHlRU';\r\n            let cityName = document.getElementById('location-search-large').value;\r\n            let urlC = `https://maps.googleapis.com/maps/api/geocode/json?address=${cityName}&key=${apiKey}`;\r\n\r\n            fetch(urlC)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.results.length > 0) {\r\n                        const location = data.results[0].geometry.location;\r\n                        const afterLatitude = location.lat;\r\n                        const afterLongitude = location.lng; \r\n                        console.log(`${cityName} ==> Latitude: ${afterLatitude}, Longitude: ${afterLongitude}`);\r\n                        \r\n                        let cityElement = document.querySelector('.city');\r\n                        if (cityElement) {\r\n                            cityElement.textContent = cityName;\r\n                        } else {\r\n                             console.error('City element not found.');\r\n                            }                       \r\n                    \r\n                    const urlTest = `https://api.open-meteo.com/v1/forecast/${cityName}?latitude=${afterLatitude}&longitude=${afterLongitude}&current=temperature_2m,is_day,rain,relative_humidity_2m,wind_speed_10m,wind_direction_10m&hourly=&timezone=Europe%2FChisinau`;\r\n                    return fetch(urlTest);\r\n                        } else {\r\n                        console.error('City not found.');\r\n                    }\r\n                })\r\n                .then(secondaryUrl => {\r\n                    if (!secondaryUrl.ok) {\r\n                        throw new Error('Secondary network response was not ok');\r\n                      }\r\n                    return secondaryUrl.jsom()\r\n                })\r\n                .then(secondaryData => {\r\n                    console.log('Secondary data: ', secondaryData)\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching coordinates:', error);\r\n                });\r\n\r\n            }\r\n            // let citycity = document.getElementById('location-search-large').value\r\n            document.getElementById('submit-button').addEventListener('click', getCoordinates)\r\n            // document.getElementById('submit-button').addEventListener('click', citycity = '' )\r\n        }           \r\n\r\n        function renderWeatherDaily(data) {\r\n                let div = `\r\n                    Temperature max: ${data.apparent_temperature_max}\r\n                    Temperature min: ${data.apparent_temperature_min}\r\n                    Wind Speed: ${data.wind_speed_10m}\r\n                    now: ${data.is_day === 0 ? 'night' : 'day'}\r\n                    Humidity: ${data.relative_humidity_2m}\r\n                    Rain ${data.rain}%\r\n                    `\r\n                    console.log(div)\r\n\r\n                    // const currentDate = new Date();\r\n                    // const temperatureForecasts = []\r\n\r\n                    // for(let i=0;i<=6;i++) {\r\n                    //     const nextDayDate = new Date(currentDate.getTime() + (i * 24 * 60 * 60 * 1000));\r\n                    //     const nextDayDateString = nextDayDate.toISOString().split('T')[0];\r\n                    //     const nextDayForecastIndex = data.time.indexOf(nextDayDateString + 'T00:00');\r\n                    //     const temperatureForecastNextDay = data.temperature_2m[nextDayForecastIndex];\r\n                    //     temperatureForecasts.push(temperatureForecastNextDay);\r\n                    // }\r\n                    // console.log(\"Temperature forecasts for the next 6 days:\", temperatureForecasts);\r\n                    for(let i=0;i<7;i++) {\r\n                    const max_grade = Math.round(data.apparent_temperature_max[1]) \r\n                    const max_gradeElement = document.getElementById('max-grade')\r\n                    max_gradeElement.textContent = max_grade + 'Â°C'\r\n                    console.log(data.apparent_temperature_max[i])\r\n                    }\r\n\r\n\r\n\r\n        \r\n\r\n    // const url1 = 'https://dummyjson.com/users';\r\n\r\n    // function fetchurl() {\r\n    //     fetch(url1)\r\n    //         .then((resp) => {\r\n    //             if (!resp.ok) {\r\n    //                 throw new Error('Network response was not ok');\r\n    //             }\r\n    //             return resp.json();\r\n    //         })\r\n    //         .then(json => {\r\n    //             const users = json.users;\r\n    //             for (let i = 0; i < 5 && i < users.length; i++) {\r\n    //                 console.log(users[i]);\r\n    //             }\r\n    //             console.log(json);\r\n    //         })\r\n    //         .catch(err => console.error(err.message));\r\n    // }\r\n    \r\n    // fetchurl();\r\n        return (\r\n            <div>\r\n            <Header />\r\n            <div className=\"hero\">\r\n            <container className=\"search-container-1\">\r\n            <div id=\"form1\" className=\"form-large\">\r\n                <input type=\"text\" maxLength={15} id=\"location-search-large\" placeholder=\"Find your location\"></input>\r\n                <button id=\"submit-button\">Find</button>\r\n            </div>\r\n            </container>\r\n            </div>\r\n\r\n            <div className='forecast-table'>\r\n            <div className=\"table\">\r\n                <div className=\"table-wrapper\">\r\n                    <div className=\"today\">\r\n                    <div className=\"today-date\">\r\n                        <div className=\"today\">{week[currentDayIndex]}</div>\r\n                        <div className=\"date\">{formattedDate1}</div>\r\n                    </div>\r\n                    <div className=\"forecast-info\">\r\n                        <div className=\"city\">Moldova, ChiÈinÄu</div>\r\n                        <div id=\"number\">\r\n                            <div id=\"grade\"></div>\r\n                            <sup id=\"sup\">o</sup>\r\n                            C\r\n                            <MySVG1 id=\"icon1\"/>\r\n                        </div>\r\n                    <div className=\"day-details\">\r\n                        <div id=\"umbrella-icon\">\r\n                            <img src={UmbrellaIcon} alt=\"umbrella-icon\" id=\"umbrella\"/>\r\n                                <div id=\"humidity-procent\"></div>\r\n                        </div>\r\n                        <div id=\"wind-icon\">\r\n                            <img src={WIndIcon} alt=\"wind-icon\" id=\"wind\"/>\r\n                            <div id=\"wind-speed\"></div>\r\n                        </div>\r\n                        <div id=\"compass-icon\">\r\n                            <img src={CompassIcon} alt=\"compass-icon\" id=\"compass\"/>\r\n                            <div id=\"compass-direction\"></div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n    \r\n            <div className=\"forecast\" style={{backgroundColor: '#262936'}}>\r\n                <div className=\"day\" style={{backgroundColor: '#222530'}}>{week[(currentDayIndex + 1) % 7]}</div>\r\n                <div className=\"day-card\">\r\n                        <div className=\"forecast-img\">\r\n                            <img alt=\"day-icon\" src={icon3} style={{width: '48px'}}></img>\r\n                        </div>\r\n                        <div id=\"max-grade\">{Math.round(data.apparent_temperature_max[1]) }</div>\r\n                        <div id=\"min-grade\">25Â°C</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"forecast\" style={{backgroundColor: '#323544'}}>\r\n                <div className=\"day\" style={{backgroundColor: '#2d303d'}}>{week[(currentDayIndex + 2) % 7]}</div>\r\n                <div className=\"day-card\">\r\n                        <div className=\"forecast-img\">\r\n                            <img alt=\"day-icon\" src={icon4} style={{width: '48px'}}></img>\r\n                        </div>\r\n                        <div id=\"max-grade\">25Â°C</div>\r\n                        <div id=\"min-grade\">25Â°C</div>\r\n                </div>\r\n            </div>\r\n    \r\n            <div className=\"forecast\" style={{backgroundColor: '#262936'}}>\r\n                <div className=\"day\" style={{backgroundColor: '#222530'}}>{week[(currentDayIndex + 3) % 7]}</div>\r\n                <div className=\"day-card\">\r\n                        <div className=\"forecast-img\">\r\n                            <img alt=\"day-icon\" src={icon5} style={{width: '48px'}}></img>\r\n                        </div>\r\n                        <div id=\"max-grade\">25Â°C</div>\r\n                        <div id=\"min-grade\">25Â°C</div>\r\n                </div>\r\n            </div>\r\n    \r\n            <div className=\"forecast\" style={{backgroundColor: '#323544'}}>\r\n                <div className=\"day\" style={{backgroundColor: '#2d303d'}}>{week[(currentDayIndex + 4) % 7]}</div>\r\n                <div className=\"day-card\">\r\n                    <div className=\"forecast-img\">\r\n                        <img alt=\"day-icon\" src={icon6} style={{width: '48px'}}></img>\r\n                    </div>\r\n                        <div id=\"max-grade\">25Â°C</div>\r\n                        <div id=\"min-grade\">25Â°C</div>\r\n                </div>\r\n            </div>\r\n    \r\n            <div className=\"forecast\" style={{backgroundColor: '#262936'}}>\r\n                <div className=\"day\" style={{backgroundColor: '#222530'}}>{week[(currentDayIndex + 5) % 7]}</div>\r\n                <div className=\"day-card\">\r\n                    <div className=\"forecast-img\">\r\n                        <img alt=\"day-icon\" src={icon7} style={{width: '48px'}}></img>\r\n                    </div>\r\n                        <div id=\"max-grade\">25Â°C</div>\r\n                        <div id=\"min-grade\">25Â°C</div>\r\n                </div>\r\n            </div>\r\n    \r\n            <div className=\"forecast\" style={{backgroundColor: '#323544'}}>\r\n                <div className=\"day\" style={{backgroundColor: '#2d303d'}}>{week[(currentDayIndex + 6) % 7]}</div>\r\n                <div className=\"day-card\">\r\n                    <div className=\"forecast-img\">\r\n                        <img alt=\"day-icon\" src={icon8} style={{width: '48px'}}></img>\r\n                    </div>\r\n                        <div id=\"max-grade\">25Â°C</div>\r\n                        <div id=\"min-grade\">25Â°C</div>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    )\r\n        }\r\n}\r\n\r\nexport default Forecast;\r\nexport { formattedDate1, formattedDate2, formattedDate3};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}